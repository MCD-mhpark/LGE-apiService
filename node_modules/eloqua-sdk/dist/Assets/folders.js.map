{"version":3,"sources":["Assets/folders.js"],"names":["log","Folders","constructor","options","campaign","querystring","id","cb","qs","_validate","_request","api","uri","contactList","contactFilter","contactSegment","contentSection","dynamicContent","email","emailFooter","emailHeaders","form","fieldMerge","hyperlink","image","importedFile","landingPage","program"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * @module\n */\n\nimport debug from 'debug';\n\nconst log = debug('eloqua:assets:folders');\n\n/** Folders Class */\nexport default class Folders {\n  /**\n   * Parent Object\n   * @member {Eloqua}\n   */\n  #parent;\n\n  /**\n   * Standard constructor\n   * @param {Eloqua} options Parent object\n   */\n  constructor(options) {\n    this.#parent = options;\n  }\n\n  /**\n   * Retrieve Campaign Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  campaign(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/campaign/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Contact List Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  contactList(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/contact/list/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Contact Filter Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  contactFilter(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/contact/filter/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Contact Segment Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  contactSegment(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/contact/segment/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Content Section Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  contentSection(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/contentSection/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n\n  /**\n   * Retrieve Dynamic Content Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  dynamicContent(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/dynamicContent/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Email Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  email(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/email/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Email Footers Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  emailFooter(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/email/footer/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Email Headers Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  emailHeaders(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/email/header/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Form Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  form(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/form/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Field Merge Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  fieldMerge(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/fieldMerge/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Hyperlink Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  hyperlink(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/hyperlink/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Image Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  image(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/image/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Imported Files Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  importedFile(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/importedFile/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Landing Page Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  landingPage(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/landingPage/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n\n  /**\n   * Retrieve Program Folders\n   * @param {querystring} [querystring] querystring params to include in request\n   * @param {number|string} [id=root] Folder Id or 'root' for top directory\n   * @param {Eloqua.callback} cb Callback to be returned\n   * @returns {Object|String} Eloqua response object or error string\n   */\n  program(querystring, id = 'root', cb) {\n    let qs = {};\n    if (querystring) {\n      qs = this.#parent._validate(['count', 'depth', 'page'], querystring);\n    }\n\n    return this.#parent._request({\n      api: 'REST',\n      uri: `/assets/program/folder/${id}/contents`,\n      qs: qs,\n    }, cb);\n  }\n}\n"],"file":"folders.js"}